version: 2.1

executors:
  x86:
    parameters:
      pyver:
        description: "Python version like: cp37-cp37m, to get available version, run: docker run --rm quay.io/pypa/manylinux1_i686 ls -la /opt/python"
        type: string
    docker:
      - image: quay.io/pypa/manylinux1_i686
    environment:
      PYBIN: linux32 /opt/python/<< parameters.pyver >>/bin/python3

  x64:
    parameters:
      pyver:
        description: "Python version like: cp37-cp37m, to get available version, run: docker run --rm quay.io/pypa/manylinux1_x86_64 ls -la /opt/python"
        type: string
    docker:
      - image: quay.io/pypa/manylinux1_x86_64
    environment:
      PYBIN: /opt/python/<< parameters.pyver >>/bin/python3

jobs:
  prepare:
    parameters:
      exec:
        type: executor
    executor: << parameters.exec >>
    steps:
      - checkout

      - run:
          name: checkout submodules
          command: |
            sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
            git submodule update --init --recursive

      - run:
          name: install dependencies
          command: |
            ${PYBIN} -m pip install --upgrade pip setuptools pytest auditwheel

      - run:
          name: build
          command: |
            ${PYBIN} setup.py bdist_wheel
            ${PYBIN} -m auditwheel repair dist/*.whl

      - run:
          name: test
          command: |
            ${PYBIN} -m pip install --upgrade wheelhouse/*.whl
            ${PYBIN} -m pytest -x -s tests

      - persist_to_workspace:
          root: wheelhouse
          paths: "*.whl"

  release:
    # parameters:
    #   exec:
    #     type: executor
    # executor: << parameters.exec >>
    docker:
      - image: python:slim
    steps:
      - attach_workspace:
          at: wheelhouse

      - run:
          name: install dependencies
          command: |
            python3 -m pip install --upgrade twine

      - run:
          name: release
          command: |
            python3 -m twine upload --skip-existing wheelhouse/*.whl

_vars:
  - &release-filter
    branches: { only: release }
    tags: { only: /^\d+\.\d+\.\d+$/ }

workflows:
  x86-py37:
    jobs:
      - prepare:
          exec: { name: x86, pyver: cp37-cp37m }
      - release:
          requires: [prepare]
          filters: *release-filter

  x86-py38:
    jobs:
      - prepare:
          exec: { name: x86, pyver: cp38-cp38 }
      - release:
          requires: [prepare]
          filters: *release-filter

  x86-py39:
    jobs:
      - prepare:
          exec: { name: x86, pyver: cp39-cp39 }
      - release:
          requires: [prepare]
          filters: *release-filter

  x64-py37:
    jobs:
      - prepare:
          exec: { name: x64, pyver: cp37-cp37m }
      - release:
          requires: [prepare]
          filters: *release-filter

  x64-py38:
    jobs:
      - prepare:
          exec: { name: x64, pyver: cp38-cp38 }
      - release:
          requires: [prepare]
          filters: *release-filter

  x64-py39:
    jobs:
      - prepare:
          exec: { name: x64, pyver: cp39-cp39 }
      - release:
          requires: [prepare]
          filters: *release-filter
